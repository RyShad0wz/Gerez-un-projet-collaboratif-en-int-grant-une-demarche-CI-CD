name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Backend - Java
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Verify Java build output
        working-directory: back
        run: 
          echo "=== Fichiers compilÃ©s ==="
          find target/classes -type f
          echo "=== Rapports JaCoCo ==="
          ls -la target/site/jacoco/   
          
      - name: Build and test backend
        working-directory: back
        run: |  
          mvn clean package -DskipTests
          mvn verify

      - name: Upload compiled backend classes
        uses: actions/upload-artifact@v4
        with:
          name: java-classes
          path: back/target/classes/

      
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      # Frontend - Angular
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install frontend dependencies
        working-directory: front
        run: npm ci
        
      - name: Run frontend tests
        working-directory: front
        run: npm test -- --watch=false --code-coverage --browsers=ChromeHeadless
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/

  sonarcloud:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download backend reports
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/
      
      - name: Download frontend reports
        uses: actions/download-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/
      
      - name: Download compiled backend classes
        uses: actions/download-artifact@v4
        with:
          name: java-classes
          path: back/target/classes/

      
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build:
    needs: sonarcloud
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set dynamic Docker tag
      id: vars
      run: echo "TAG=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      working-directory: back
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest -t ${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ env.TAG }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:${{ env.TAG }}

    - name: Build and push frontend image
      working-directory: front
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest -t ${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ env.TAG }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:${{ env.TAG }}
